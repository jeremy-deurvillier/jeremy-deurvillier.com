---
import { Image } from 'astro:assets';
import Linkedin from './svg/Linkedin.astro';
import Github from './svg/Github.astro';
import Discord from './svg/Discord.astro';

type MainPath = '/' | '/services' | '/formations' | '/contact';
type AppointmentPath = '/prendre-rendez-vous';
type SecondPath = '/mentions-legales' | '/conditions-generales';

const mainPathsList: MainPath[] = ['/', '/services', '/formations', '/contact'];

const appointmentPathList: AppointmentPath[] = ['/prendre-rendez-vous'];

const secondPathsListWithText: Record<SecondPath, string> = {
    '/mentions-legales': 'mentions légales',
    '/conditions-generales': 'conditions générales'
};
const secondPathsList = Object.keys(secondPathsListWithText) as SecondPath[];

const { currentPath } = Astro.props;
---

<nav class="container px-6 py-4 mx-auto" x-data="{isOpen: false}" @keyup.comma.window="isOpen = true" @keyup.escape.window="isOpen = false">
    <div class="flex items-center justify-between">
        <a href="/" class="rounded-sm">
            <Image src="/img/logo.svg" alt="Logo de Jérémy Deurvillier" width="32" height="32" />
        </a>

        <button class="flex flex-col gap-1.5 *:bg-gradient-to-r hover:*:from-[#269173] hover:*:to-[#065F46] cursor-pointer" @click="isOpen = true">
            <span class="w-5 h-1 block bg-neutral-300 transition-colors duration-300"></span>
            <span class="w-8 h-1 block bg-neutral-300 transition-colors duration-300"></span>
            <span class="w-5 h-1 block bg-neutral-300 transition-colors duration-300 self-end"></span>
        </button>
    </div>

    <div class="bg-emerald-600 fixed left-0 top-0 z-50 w-screen h-screen backdrop-blur-md animate__animated animate__bounceInDown" x-cloak x-show="isOpen" x-transition:leave="animate__bounceOutUp">
        <div class="h-full container flex flex-col md:flex-row justify-between px-6 py-4 mx-auto">
            <div class="h-full flex flex-col justify-between">
                <ul class="font-sono flex flex-col gap-4">
                    { mainPathsList.map( path => {

                        return (currentPath === path)
                        ? <li><span class="after:content-[''] after:block after:absolute after:left-0 after:top-1/2 after:right-0 after:h-1 after:bg-neutral-200/60 relative font-bold text-4xl sm:text-5xl xl:text-7xl uppercase text-neutral-200/60">{ (path === '/')?'Accueil':path.substring(1) }</span></li>
                        : <li><a href={ path } class="after:block after:absolute after:left-0 after:bottom-0 after:w-0 hover:after:w-[2ch] after:h-1 after:bg-neutral-200/60 after:transition-all relative font-bold text-4xl sm:text-5xl xl:text-7xl uppercase text-white">{ (path === '/')?'Accueil':path.substring(1) }</a></li>
                    }) }

                    { (currentPath === appointmentPathList[0])
                    ? <li class="mt-4 sm:mt-5 xl:mt-7"><span class="font-zilla font-bold text-2xl sm:text-3xl xl:text-5xl text-neutral-200/60 bg-emerald-600 py-2 px-3 border-2 border-neutral-200/60 rounded-sm">Prendre rendez-vous</span></li>
                    : <li class="mt-4 sm:mt-5 xl:mt-7"><a href="/prendre-rendez-vous" class="font-zilla font-bold text-2xl sm:text-3xl xl:text-5xl text-emerald-600 hover:text-white bg-white hover:bg-emerald-600 py-2 px-3 border-2 border-white rounded-sm transition-colors duration-200 *:scale-100 *:hover:scale-95 *:inline-block *:transition-all *:duration-200"><span>Prendre rendez-vous</span></a></li>
                    }

                    <li class="mt-0 sm:mt-5 xl:mt-7"></li>

                    { secondPathsList.map(path => {
                        let text: string = secondPathsListWithText[path];

                        return (currentPath === path)
                        ? <li><span class="after:hidden md:after:block after:absolute after:left-0 after:top-1/2 after:right-0 after:h-1 after:bg-neutral-200/60 relative hidden md:inline-block font-sono font-bold text-xl sm:text-2xl xl:text-4xl capitalize text-neutral-200/60">{ text }</span></li>
                        : <li><a href={ path } class="after:block after:absolute after:right-0 after:bg-neutral-200/60 after:w-0 after:h-1 hover:after:w-full after:transition-all after:duration-200 relative font-sono font-bold text-xl sm:text-2xl xl:text-4xl capitalize text-white hidden md:inline-block">{ text }</a></li>
                    }) }
                </ul>

                <div class="visible-if-height-valid after:content-[''] after:hidden after:md:block after:absolute after:left-0 after:top-0 after:w-24 after:h-0.5 after:lg:w-36 after:bg-neutral-200/60 after:-translate-y-2.5 relative font-medium text-white">
                    <blockquote class="italic">
                        <p class="mb-2.5">
                            Many great ideas go unexecuted, and many great executioners are without ideas. <br />One without the other is worthless.
                        </p>
                    </blockquote>
                    <p>&mdash; Tim Blixseth</p>
                </div>
            </div>

            <div class="flex md:flex-col items-center justify-between">
                <ul class="after:content-[''] after:hidden after:md:block after:absolute after:left-1/2 after:top-0 after:w-0.5 after:h-24 after:lg:h-36 after:bg-neutral-200/60 after:-translate-y-32 after:lg:-translate-y-44 relative flex md:flex-col items-center md:justify-end gap-8 md:order-last">
                    <li>
                        <a class="social-links text-white" href="https://github.com/jeremy-deurvillier" target="_blank">
                            <Github class="w-8 h-8" />
                        </a>
                    </li>
                    <li>
                        <a class="social-links text-white" href="https://www.linkedin.com/in/jeremy-deurvillier/" target="_blank">
                            <Linkedin class="w-8 h-8" />
                        </a>
                    </li>
                    <li>
                        <a class="social-links text-white" href="https://discord.gg/NAxjvzWGmC" target="_blank">
                            <Discord class="w-8 h-8" />
                        </a>
                    </li>
                </ul>

                <div class="flex items-center justify-center -translate-y-0.5 md:-translate-y-5">
                    <button class="close-icon text-6xl text-white transition-all duration-200 cursor-pointer" @click="isOpen = false">&times;</button>
                </div>
            </div>
        </div>
    </div>
</nav>

<style>
    :root {
        --animate-duration: 0.3s;
        --animate-delay: 0.3s;
    }

    [x-cloak] {display: none !important;}

    .visible-if-height-valid {
        display: none;
    }

    @media (min-height: 640px) and (min-width: 768px) {
        .visible-if-height-valid {
            display: block;
        }
    }

    @media (min-height: 640px) and (max-height: 767px) and (min-width: 1280px) {
        .visible-if-height-valid {
            display: none;
        }
    }

    .social-links:hover {
        display: block;
        animation: wiggle 1.5s linear infinite;
    }

    .close-icon:hover {
        display: block;
        animation: scale .6s linear 1;
    }

    /* ***** Animations ***** */

    @keyframes wiggle {
        0%, 7% { transform: rotateZ(0); }
        15% { transform: rotateZ(-30deg); }
        20% { transform: rotateZ(20deg); }
        25% { transform: rotateZ(-20deg); }
        30% { transform: rotateZ(12deg); }
        35% { transform: rotateZ(-8deg); }
        40%, 100% { transform: rotateZ(0); }
    }

    @keyframes scale {
        0% { transform: scale(1); }
        28% { transform: scale(.66); }
        44% { transform: scale(.99); }
        59% { transform: scale(1.1); }
        73% { transform: scale(.99); }
        88% { transform: scale(.9); }
        100% { transform: scale(1); }
    }
</style>